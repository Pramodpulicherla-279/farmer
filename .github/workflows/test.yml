name: Android APK Testing with Firebase Test Lab and Allure
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # Setup Node.js for Allure
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Allure
        run: npm install -g allure-commandline

      # Set up Google Cloud SDK and authenticate
      - name: Set up Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase-service-account.json
          gcloud auth activate-service-account --key-file=firebase-service-account.json
          gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      # Prepare APKs
      - name: Prepare APKs
        run: |
          cp "./Krishivaas_Farmer.apk" ./app.apk

      # Create directory for Allure results
      - name: Create Allure Directory
        run: mkdir -p ./allure-results

      # Run tests on Firebase Test Lab
      - name: Run Firebase Test Lab with Allure
        run: |
          # Create temporary GCS bucket (required by Firebase Test Lab)
          TEMP_BUCKET="temp-bucket-$GITHUB_RUN_ID"
          gsutil mb -p ${{ secrets.FIREBASE_PROJECT_ID }} gs://$TEMP_BUCKET || true
          
          # Run tests
          gcloud firebase test android run \
            --type instrumentation \
            --app ./app.apk \
            --test ./test.apk \
            --device model=Pixel2,version=30,locale=en,orientation=portrait \
            --environment-variables clearPackageData=true \
            --directories-to-pull=/sdcard/Download/allure-results \
            --results-bucket=gs://$TEMP_BUCKET \
            --results-dir=allure-results \
            --timeout 20m
          
          # Download results
          gsutil -m cp -r "gs://$TEMP_BUCKET/allure-results/*/artifacts/sdcard/Download/allure-results" ./allure-results/ || echo "No results found"
          
          # Clean up temporary bucket
          gsutil rm -r gs://$TEMP_BUCKET || true

      # Generate Allure Report
      - name: Generate Allure Report
        if: always()
        run: |
          allure generate ./allure-results --clean -o ./allure-report

      # Upload Allure Report as Artifact
      - uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report