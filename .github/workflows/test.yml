name: Android APK Testing with Firebase Test Lab
on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # Set up Java and Android SDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # Install Firebase CLI and authenticate
      - name: Set up Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > firebase-service-account.json
          firebase login:ci --no-localhost --token "${{ secrets.FIREBASE_TOKEN }}"
          firebase use --add ${{ secrets.FIREBASE_PROJECT_ID }}

      # Allure setup
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Allure
        run: npm install -g allure-commandline

      # Prepare APK
      - name: Prepare APK
        run: |
          cp "./Krishivaas_Farmer_RN(V1.3.60).apk" ./app.apk

      # Run tests on Firebase Test Lab
      - name: Run Tests on Firebase Test Lab
        run: |
          # Create a results directory
          mkdir -p ./results
          
          # Run the test on Firebase Test Lab using Firebase CLI
          firebase test android run \
            --app ./app.apk \
            --test ./path/to/your/test.apk \
            --device model=Pixel2,version=30 \
            --timeout 20m \
            --results-bucket=gs://your-bucket-name \
            --results-dir=github-actions-$GITHUB_RUN_ID \
            --environment-variables clearPackageData=true \
            --directories-to-pull=/sdcard/Download/allure-results
          
          # Download the results
          gsutil -m cp -r "gs://your-bucket-name/github-actions-$GITHUB_RUN_ID/*" ./results/

      # Generate Allure report
      - name: Generate Allure Report
        if: always()
        run: |
          allure generate ./results --clean -o ./report
          
      # Upload report as artifact
      - uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report