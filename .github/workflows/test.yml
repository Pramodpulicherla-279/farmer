name: Android APK Testing
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Proper Android SDK setup
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          # Required to get emulator working
          emulator: true

      # Add Android tools to PATH
      - name: Set up Android environment
        run: |
          echo "$ANDROID_SDK_ROOT/emulator" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

      # Create and start emulator
      - name: Create and start emulator
        run: |
          # Accept licenses first
          yes | sdkmanager --licenses
          
          # Install system image
          sdkmanager "platform-tools" "emulator"
          sdkmanager "system-images;android-31;google_apis;x86_64"
          
          # Create AVD
          echo "no" | avdmanager create avd \
            --name "test_avd" \
            --package "system-images;android-31;google_apis;x86_64" \
            --device "pixel_6_pro" \
            --force
          
          # Start emulator
          emulator -avd test_avd -no-window -no-audio -no-snapshot -camera-back none -camera-front none &
          
          # Wait for device
          adb wait-for-device
          echo "Emulator started successfully"

      # Wait for full boot
      - name: Wait for emulator boot
        run: |
          adb wait-for-device
          while [ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]; do
            echo "Waiting for emulator to boot..."
            sleep 5
          done
          echo "Emulator is ready"

      # Rest of your steps...
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g appium
          npm install
          npm install -g allure-commandline

      # Install APK
      - name: Install APK
        run: |
          adb install -t ./Krishivaas_Farmer.apk
          adb shell pm list packages | grep com.krishivaas

      # Run WebdriverIO tests
      - name: Run Tests
        env:
          APPIUM_PORT: 4723
        run: |
          # Start Appium server in background
          nohup appium --log-level info --relaxed-security > appium.log 2>&1 &
          
          # Wait for Appium to start
          sleep 10
          
          # Run tests
          npx wdio run wdio.conf.js || true
          
          # Save logs
          mkdir -p test-results
          cp appium.log test-results/
          adb logcat -d > test-results/logcat.log

      # Process test results
      - name: Process results
        if: always()
        run: |
          # Generate Allure report
          allure generate allure-results --clean -o allure-report
          
          # Check for test failures
          if grep -q "failed" wdio.log; then
            echo "::warning::Some tests failed"
          fi

      # Upload artifacts
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            allure-report/
            test-results/
            screenshots/
            wdio.log

      # Clean up
      - name: Stop emulator
        if: always()
        run: |
          adb emu kill
          pkill -f "emulator"